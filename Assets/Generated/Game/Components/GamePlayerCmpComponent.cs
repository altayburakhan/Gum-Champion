//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public PlayerCmp playerCmp { get { return (PlayerCmp)GetComponent(GameComponentsLookup.PlayerCmp); } }
    public bool hasPlayerCmp { get { return HasComponent(GameComponentsLookup.PlayerCmp); } }

    public void AddPlayerCmp(UnityEngine.Vector3 newPosition) {
        var index = GameComponentsLookup.PlayerCmp;
        var component = (PlayerCmp)CreateComponent(index, typeof(PlayerCmp));
        component.position = newPosition;
        AddComponent(index, component);
    }

    public void ReplacePlayerCmp(UnityEngine.Vector3 newPosition) {
        var index = GameComponentsLookup.PlayerCmp;
        var component = (PlayerCmp)CreateComponent(index, typeof(PlayerCmp));
        component.position = newPosition;
        ReplaceComponent(index, component);
    }

    public void RemovePlayerCmp() {
        RemoveComponent(GameComponentsLookup.PlayerCmp);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPlayerCmp;

    public static Entitas.IMatcher<GameEntity> PlayerCmp {
        get {
            if (_matcherPlayerCmp == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PlayerCmp);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPlayerCmp = matcher;
            }

            return _matcherPlayerCmp;
        }
    }
}
