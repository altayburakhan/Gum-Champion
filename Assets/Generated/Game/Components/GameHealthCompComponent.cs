//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity healthCompEntity { get { return GetGroup(GameMatcher.HealthComp).GetSingleEntity(); } }
    public HealthComp healthComp { get { return healthCompEntity.healthComp; } }
    public bool hasHealthComp { get { return healthCompEntity != null; } }

    public GameEntity SetHealthComp(float newValue) {
        if (hasHealthComp) {
            throw new Entitas.EntitasException("Could not set HealthComp!\n" + this + " already has an entity with HealthComp!",
                "You should check if the context already has a healthCompEntity before setting it or use context.ReplaceHealthComp().");
        }
        var entity = CreateEntity();
        entity.AddHealthComp(newValue);
        return entity;
    }

    public void ReplaceHealthComp(float newValue) {
        var entity = healthCompEntity;
        if (entity == null) {
            entity = SetHealthComp(newValue);
        } else {
            entity.ReplaceHealthComp(newValue);
        }
    }

    public void RemoveHealthComp() {
        healthCompEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public HealthComp healthComp { get { return (HealthComp)GetComponent(GameComponentsLookup.HealthComp); } }
    public bool hasHealthComp { get { return HasComponent(GameComponentsLookup.HealthComp); } }

    public void AddHealthComp(float newValue) {
        var index = GameComponentsLookup.HealthComp;
        var component = (HealthComp)CreateComponent(index, typeof(HealthComp));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceHealthComp(float newValue) {
        var index = GameComponentsLookup.HealthComp;
        var component = (HealthComp)CreateComponent(index, typeof(HealthComp));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveHealthComp() {
        RemoveComponent(GameComponentsLookup.HealthComp);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherHealthComp;

    public static Entitas.IMatcher<GameEntity> HealthComp {
        get {
            if (_matcherHealthComp == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.HealthComp);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherHealthComp = matcher;
            }

            return _matcherHealthComp;
        }
    }
}
